@import "./variable";

@mixin tl($direction: left) {
  text-align: $direction;
  text-align-last: $direction;
}

.tl-c{
  @include tl(center)
}
.tl-l{
  @include tl(left)
}
.tl-r{
  @include tl(right)
}
// margin + padding
$distance-list: (1,2,3,4,5,10,15,20,25,30);
@each $i in $distance-list {
  .m-#{$i}{margin:(1px * $i);}
  .m-t-#{$i}{margin-top:(1px * $i);}
  .m-r-#{$i}{margin-right:(1px * $i);}
  .m-b-#{$i}{margin-bottom:(1px * $i);}
  .m-l-#{$i}{margin-left:(1px * $i);}
  .p-#{$i}{padding:(1px * $i);}
  .p-t-#{$i}{padding-top:(1px * $i);}
  .p-r-#{$i}{padding-right:(1px * $i);}
  .p-b-#{$i}{padding-bottom:(1px * $i);}
  .p-l-#{$i}{padding-left:(1px * $i);}
}

.cur-pt{
  cursor: pointer;
}

.cur-na{
  cursor: not-allowed;
}

@mixin border($bd-color: $color-bd) {
  border: solid 1px $bd-color;
  box-sizing: border-box;
}

@mixin border-shadow {
  box-sizing: border-box;
  -moz-box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.08);
  -webkit-box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.08);
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.08);
  @include border
}

@mixin button-normal(
  $bg-color: $color-default,
  $hover-color: $color-default-hover,
  $active-color: $color-default-active) {
  height: 40px;
  line-height: 38px;
  border-radius: 20px;
  border: none;
  padding: 0 30px;
  font-size: 14px;
  color: #222;
  background-color: $bg-color;
  box-sizing: border-box;
  user-select: none;
  &:hover {
    transition: background-color .3s, opacity .1s;
    cursor: pointer;
    background-color: $hover-color;
  }
  &:active {
    background-color: $active-color;
  }
}

/* 默认按钮 */
@mixin default-button() {
  @include button-normal($color-fff, $color-default-hover, $color-default-active);
  border: solid 1px #888888;
  color: #555;
  background-color: transparent;
  &:hover,
  &:active {
    color: #222;
    border-color: transparent;
  }
}

/* 主要按钮 */
@mixin primary-button() {
  @include button-normal();
  &[disabled] {
    opacity: .3;
    cursor: no-drop;
  }
}

/* 红色按钮 */
@mixin red-button() {
  @include button-normal($color-red, $color-red-hover, $color-red-active)
}
/* 红色按钮 */
@mixin red-sample-button() {
  @include button-normal();
  background-color: transparent;
  border: solid 1px $color-red;
  color:  $color-red;
  &:hover{
    background-color: transparent;
    border-color: $color-red-hover;
    color: $color-red-hover;
  }
  &:active {
    background-color: transparent;
    border-color: $color-red-active;
    color: $color-red-active;
  }
}

/* 蓝色按钮 */
@mixin blue-button() {
  @include button-normal($color-blue, $color-blue-hover, $color-blue-active)
}

.default-button {
  @include default-button
}
.mid-button{
  @include default-button;
  height: 34px;
  line-height: 32px;
  padding: 0 20px;
}

.primary-button {
  @include primary-button
}
.big-button {
  width: 200px;
}
.default-button.small-button {
  height:34px !important;
  line-height: 32px !important;
}
.default-button.big-button {
  width: 200px;
}
.primary-button.is-round {
  height:34px !important;
  line-height: 34px !important;
}
.default-button.s-button {
  height:30px !important;
  line-height: 28px !important;
  padding: 0 20px;
}
.default-button.mini-button {
  height: 24px !important;
  line-height: 22px !important;
  vertical-align: middle;
  padding: 0 10px;
}
.back-button{
  width: 70px;
  height: 30px;
  line-height: 28px;
  padding: 0;
  text-align: center;
  vertical-align: middle;
}
.red-button {
  @include red-button
}
.red-sample-button {
  @include red-sample-button
}

.blue-button {
  @include blue-button
}

@mixin linear($color1: #000, $color2: #fff, $angle: 180deg) {
  background: ($color1+$color2)/2;
  background: linear-gradient($angle, $color1, $color2);
}

@mixin animate($type: all, $sec: 0.2s, $animation: ease-in) {
  transition: $type $sec $animation;
}

@mixin no-wrap($text: ellipsis) {
  text-overflow: $text;
  overflow: hidden;
  white-space: nowrap;
}

@mixin flex($justify: flex-start, $align-items: center, $dir: row, $wrap: nowrap, $align-content: stretch) {
  display: flex;
  flex-flow: $dir $wrap;
  justify-content: $justify;
  align-items: $align-items;
  align-content: $align-content;
}
button[disabled] {
  cursor:default !important;
  opacity: 0.5 !important;
  &:active,&:hover {
    color:#222;
  }
  * {
    cursor:not-allowed !important;
  }
}

@mixin testOverflow($overNum: 1) {
  @if $overNum == 1 {
    text-overflow:ellipsis;
    white-space: nowrap;
  }
  @if $overNum > 1 {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $overNum;
  }
}
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }
  @return $string;
}
@mixin webpbg($url) {
  background-image: url($url);
  @at-root .webp & {
    $t_url: str-replace($url, '.png', '.webp');
    $t_url: str-replace($t_url, '.jpg', '.webp');
    background-image: url($t_url);
  }
}

.clamp-2{
  overflow : hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  white-space:normal;
  word-break:keep-all;
  word-wrap: break-word;
}

.cover-img{
  background-position: 50%;
  background-size: cover;
  background-repeat: no-repeat;
}

.contain-img{
  background-position: 50%;
  background-size: contain;
  background-repeat: no-repeat;
  background-color: transparent;
}

.abs-c{
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%,-50%);
}
